racket@> line-xs
'#(2.0 1.0 4.0 3.0)
racket@> theta-0
'(0 0)
racket@> loss-theta-0
30.0
racket@> loss-theta-0
33.21
racket@> loss-theta-1
loss-theta-1: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (loss-theta '(0 0))
33.21
racket@>   M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.
Welcome to Racket v8.15 [cs].
racket@>   M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.
Welcome to Racket v8.15 [cs].
racket@> (require "uv/calculus.rkt")
racket@> line-xs
'#(2.0 1.0 4.0 3.0)
racket@> (loss-line line-xs line-ys '(0 0))
loss-line: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (loss-line line-xs line-ys '(0 0))
loss-line: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@>   M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.
Welcome to Racket v8.15 [cs].
racket@> (require "uv/calculus.rkt")
racket@> (loss-line line-xs line-ys '(0 0))
loss-line: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> ((uv/line line-xs) '(0 0))
'#(0 0 0 0)
racket@> (define loss-line
  (lambda (xs ys theta)
    (((uv/l2-loss uv/line) xs ys) theta)))

racket@> (loss-line line-xs line-ys '(0 0))
33.21
racket@> (require "uv/calculus.rkt")
racket@>   M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.
Welcome to Racket v8.15 [cs].
racket@> (require "uv/calculus.rkt")
racket@> (plot-theta line-xs line-ys)
uv/loss-line-m: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   plot-theta
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
uv/loss-line-m: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   plot-theta
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@>   M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.
Welcome to Racket v8.15 [cs].
racket@> (plot-theta line-xs line-ys)
plot: could not determine sensible plot bounds; got x ∈ [.1,8], y ∈ [#f,#f]
  context...:
   body of top-level
   /Applications/Racket v8.15/share/pkgs/plot-gui-lib/plot/private/gui/plot2d.rkt:72:0: plot-snip
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
function: arity mismatch;
 the expected number of arguments does not match the given number
  expected: a different number plus optional arguments with keywords #:alpha, #:color, #:label, #:marker, #:marker-alpha, #:marker-color, #:marker-count, #:marker-fill-color, #:marker-line-width, #:marker-size, #:samples, #:style, #:width, #:y-max, and #:y-min
  given: 5
  arguments...:
   #<procedure:...ner/uv/calculus.rkt:49:4>
   0.1
   8
   0
   10
  context...:
   body of top-level
   plot-theta
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
application: procedure does not expect an argument with given keyword
  procedure: function
  given keyword: #:x-max
  arguments...:
   #<procedure:...ner/uv/calculus.rkt:49:4>
   #:x-max 10
   #:x-min 0
   #:y-max 10
   #:y-min 0
  context...:
   /Applications/Racket v8.15/collects/racket/private/kw.rkt:1647:4: body of top-level
   plot-theta
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
application: procedure does not expect an argument with given keyword
  procedure: function
  given keyword: #:x-min
  arguments...:
   #<procedure:...ner/uv/calculus.rkt:49:4>
   #:x-min 0
   #:y-max 10
   #:y-min 0
  context...:
   /Applications/Racket v8.15/collects/racket/private/kw.rkt:1647:4: body of top-level
   plot-theta
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
application: procedure does not expect an argument with given keyword
  procedure: function
  given keyword: #:x-min
  arguments...:
   #<procedure:...ner/uv/calculus.rkt:49:4>
   #:x-min 0
   #:y-max 10
   #:y-min 0
  context...:
   /Applications/Racket v8.15/collects/racket/private/kw.rkt:1647:4: body of top-level
   plot-theta
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
plot: could not determine sensible plot bounds; got x ∈ [#f,#f], y ∈ [0,10]
  context...:
   body of top-level
   /Applications/Racket v8.15/share/pkgs/plot-gui-lib/plot/private/gui/plot2d.rkt:72:0: plot-snip
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
[image]
racket@> (plot-theta line-xs line-ys)
[image]
racket@> (plot-theta line-xs line-ys)
[image]
racket@> (plot-theta line-xs line-ys)
[image]
racket@> (plot-theta line-xs line-ys)
[image]
racket@> ((uv/loss-line-m line-xs line-ys) 1)
uv/loss-line: arity mismatch;
 the expected number of arguments does not match the given number
  expected: 2
  given: 3
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> line-xs
'#(2.0 1.0 4.0 3.0)
racket@> (uv/loss-line line-xs line-ys)
#<procedure:...ner/uv/calculus.rkt:44:4>
racket@> ((uv/loss-line line-xs line-ys) 0)
car: contract violation
  expected: pair?
  given: 0
  context...:
   /Applications/Racket v8.15/collects/racket/vector.rkt:38:0: body of top-level
   /Applications/Racket v8.15/collects/racket/vector.rkt:82:0: vector-map
   /Users/ugo/projects/ugovaretto-education/the-little-learner/uv/calculus.rkt:36:6
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> ((uv/loss-line line-xs line-ys) '0 0))
...ner/uv/calculus.rkt:44:4: arity mismatch;
 the expected number of arguments does not match the given number
  expected: 1
  given: 2
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> stdin::165171: read-syntax: unexpected `)`
  context...:
   /Users/ugo/.config/emacs/elpa/geiser-racket-20210421.125/src/geiser/user.rkt:89:0
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> ((uv/loss-line line-xs line-ys) '(0 0))
33.21
racket@> ((uv/loss-line-m line-xs line-ys) 0)
uv/loss-line: arity mismatch;
 the expected number of arguments does not match the given number
  expected: 2
  given: 3
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> ((uv/loss-line-m line-xs line-ys) 0)
33.21
racket@> (plot-theta line-xs line-ys)
[image]
racket@> (plot-theta line-xs line-ys)
[image]
racket@> (plot-theta line-xs line-ys)
[image]
racket@> (plot-theta line-xs line-ys)
[image]
racket@> (plot-theta line-xs line-ys)
uv/loss-line: arity mismatch;
 the expected number of arguments does not match the given number
  expected: 2
  given: 0
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
surface3d: contract violation
  expected: a procedure that accepts 2 non-keyword argument
  given: #<procedure:...ner/uv/calculus.rkt:44:4>
  in: the 1st argument of
      (->*
       ((-> any/c any/c real?))
       ((or/c real? #f)
        (or/c real? #f)
        (or/c real? #f)
        (or/c real? #f)
        #:alpha
        (and/c real? nonnegative?)
        #:color
        (or/c
         string?
         symbol?
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g105
         1
         0
         (recursive-contract g133 #:impersonator)
         (list/c real? real? real?))
        #:label
        (or/c string? #f pict?)
        #:line-color
        (or/c
         string?
         symbol?
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g105
         1
         0
         (recursive-contract g133 #:impersonator)
         (list/c real? real? real?))
        #:line-style
        (or/c
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g105
         1
         0
         'transparent
         'solid
         'dot
         'long-dash
         'short-dash
         'dot-dash)
        #:line-width
        (and/c real? nonnegative?)
        #:samples
        (and/c exact-integer? positive?)
        #:style
        (or/c
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g105
         1
         0
         'transparent
         'solid
         'bdiagonal-hatch
         'fdiagonal-hatch
         'crossdiag-hatch
         'horizontal-hatch
         'vertical-hatch
         'cross-hatch)
        #:z-max
        (or/c real? #f)
        #:z-min
        (or/c real? #f))
       any)
  contract from: 
      <pkgs>/plot-lib/plot/private/plot3d/surface.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/plot3d/surface.rkt:47:9
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   /Applications/Racket v8.15/share/pkgs/typed-racket-lib/typed-racket/utils/simple-result-arrow.rkt:19:5
   /Applications/Racket v8.15/collects/racket/contract/combinator.rkt:202:4
   .../private/arrow-higher-order.rkt:392:52: ...row-higher-order.rkt:392:52
   /Applications/Racket v8.15/collects/racket/private/kw.rkt:2093:33: body of top-level
   plot-theta
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta line-xs line-ys)
surface3d: contract violation
  expected: a procedure that accepts 2 non-keyword argument
  given: #<procedure:...ner/uv/calculus.rkt:44:4>
  in: the 1st argument of
      (->*
       ((-> any/c any/c real?))
       ((or/c real? #f)
        (or/c real? #f)
        (or/c real? #f)
        (or/c real? #f)
        #:alpha
        (and/c real? nonnegative?)
        #:color
        (or/c
         string?
         symbol?
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g105
         1
         0
         (recursive-contract g133 #:impersonator)
         (list/c real? real? real?))
        #:label
        (or/c string? #f pict?)
        #:line-color
        (or/c
         string?
         symbol?
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g105
         1
         0
         (recursive-contract g133 #:impersonator)
         (list/c real? real? real?))
        #:line-style
        (or/c
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g105
         1
         0
         'transparent
         'solid
         'dot
         'long-dash
         'short-dash
         'dot-dash)
        #:line-width
        (and/c real? nonnegative?)
        #:samples
        (and/c exact-integer? positive?)
        #:style
        (or/c
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g105
         1
         0
         'transparent
         'solid
         'bdiagonal-hatch
         'fdiagonal-hatch
         'crossdiag-hatch
         'horizontal-hatch
         'vertical-hatch
         'cross-hatch)
        #:z-max
        (or/c real? #f)
        #:z-min
        (or/c real? #f))
       any)
  contract from: 
      <pkgs>/plot-lib/plot/private/plot3d/surface.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/plot3d/surface.rkt:47:9
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   /Applications/Racket v8.15/share/pkgs/typed-racket-lib/typed-racket/utils/simple-result-arrow.rkt:19:5
   /Applications/Racket v8.15/collects/racket/contract/combinator.rkt:202:4
   .../private/arrow-higher-order.rkt:392:52: ...row-higher-order.rkt:392:52
   /Applications/Racket v8.15/collects/racket/private/kw.rkt:2093:33: body of top-level
   plot-theta
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta-3d line-xs line-ys)
plot-theta-3d: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> -1
-1
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (set! plot-new-window? #t)
stdin::587966: set!: cannot mutate syntax identifier
  at: plot-new-window?
  in: (set! plot-new-window? #t)
  location...:
   stdin::587966
  context...:
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (set! plot-new-window #t)
set!: assignment disallowed;
 cannot set variable before its definition
  variable: plot-new-window
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-new-window?)
#f
racket@> (plot-theta-3d line-xs line-ys)
application: procedure does not expect an argument with given keyword
  procedure: surface3d
  given keyword: #:angle
  arguments...:
   #<procedure>
   0
   4
   -2
   2
   #:angle 10
   #:samples 100
   #:style 'solid
   #:z-max 200
   #:z-min -10
  context...:
   /Applications/Racket v8.15/collects/racket/private/kw.rkt:1647:4: body of top-level
   plot-theta-3d
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-3d line-xs line-ys)
[image]
racket@> (plot-theta-0 line-xs line-ys)
[image]
racket@> (vector-map vector line-xs line-ys)
'#(#(2.0 1.8) #(1.0 1.2) #(4.0 4.2) #(3.0 3.3))
racket@> (loss-weights line-xs line-ys '((-1 0) (0 0) (1 0) (2 0) (3 0)))
vector-map: contract violation
  expected: vector?
  given: '((-1 0) (0 0) (1 0) (2 0) (3 0))
  argument position: 2nd
  other arguments...:
   #<procedure:...ner/uv/calculus.rkt:36:6>
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/vector.rkt:48:0: varargs-check
   /Applications/Racket v8.15/collects/racket/vector.rkt:82:0: vector-map
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (loss-weights line-xs line-ys '((-1 0) (0 0) (1 0) (2 0) (3 0)))
line: contract violation
  expected: a procedure
  given: '#(2.0 1.0 4.0 3.0)
  in: the 1st argument of
      (->*
       ((->
         real?
         (or/c real? (vector/c real? real?))))
       (#:color
        (or/c
         exact-integer?
         (or/c
          (list/c real? real? real?)
          string?
          symbol?
          (is-a?/c color%)))
        #:mapping
        (or/c 'cartesian 'polar)
        #:mode
        (or/c 'standard 'parametric)
        #:samples
        (integer-in 2 #f)
        #:t-max
        real?
        #:t-min
        real?
        #:width
        (>=/c 0))
       renderer2d?)
  contract from: 
      <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt:12:3
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   .../private/arrow-higher-order.rkt:387:44: ...row-higher-order.rkt:387:44
   body of top-level
   /Users/ugo/projects/ugovaretto-education/the-little-learner/uv/calculus.rkt:36:6
   .../private/map.rkt:40:19: loop
   loss-weights
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (list->vector '(2 3))
'#(2 3)
racket@> (define m (map ((uv/l2-loss line line-xs line-ys)) '((2 3) (3 4))))
uv/l2-loss: arity mismatch;
 the expected number of arguments does not match the given number
  expected: 1
  given: 3
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (define m (map ((uv/l2-loss line) line-xs line-ys)) '((2 3) (3 4)))
stdin::1123501: define: bad syntax (multiple expressions after identifier)
  in: (define m (map ((uv/l2-loss line) line-xs line-ys)) (quote ((2 3) (3 4))))
  location...:
   stdin::1123501
  context...:
   /Applications/Racket v8.15/collects/racket/private/norm-define.rkt:165:4: normalize-definition
   /Applications/Racket v8.15/collects/racket/private/kw.rkt:1169:2
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (define m (map ((uv/l2-loss line) line-xs line-ys) '((2 3) (3 4))))
line: contract violation
  expected: a procedure
  given: '#(2.0 1.0 4.0 3.0)
  in: the 1st argument of
      (->*
       ((->
         real?
         (or/c real? (vector/c real? real?))))
       (#:color
        (or/c
         exact-integer?
         (or/c
          (list/c real? real? real?)
          string?
          symbol?
          (is-a?/c color%)))
        #:mapping
        (or/c 'cartesian 'polar)
        #:mode
        (or/c 'standard 'parametric)
        #:samples
        (integer-in 2 #f)
        #:t-max
        real?
        #:t-min
        real?
        #:width
        (>=/c 0))
       renderer2d?)
  contract from: 
      <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt:12:3
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   .../private/arrow-higher-order.rkt:387:44: ...row-higher-order.rkt:387:44
   body of top-level
   /Users/ugo/projects/ugovaretto-education/the-little-learner/uv/calculus.rkt:36:6
   .../private/map.rkt:40:19: loop
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (define m (map (lambda (xs) (car xs)) '((2 3) (3 4))))
racket@> m
'(2 3)
racket@> ((uv/l2-loss line) line-xs line-ys)
#<procedure:...ner/uv/calculus.rkt:36:6>
racket@> (((uv/l2-loss line) line-xs line-ys) '(3 4))
line: contract violation
  expected: a procedure
  given: '#(2.0 1.0 4.0 3.0)
  in: the 1st argument of
      (->*
       ((->
         real?
         (or/c real? (vector/c real? real?))))
       (#:color
        (or/c
         exact-integer?
         (or/c
          (list/c real? real? real?)
          string?
          symbol?
          (is-a?/c color%)))
        #:mapping
        (or/c 'cartesian 'polar)
        #:mode
        (or/c 'standard 'parametric)
        #:samples
        (integer-in 2 #f)
        #:t-max
        real?
        #:t-min
        real?
        #:width
        (>=/c 0))
       renderer2d?)
  contract from: 
      <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt:12:3
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   .../private/arrow-higher-order.rkt:387:44: ...row-higher-order.rkt:387:44
   body of top-level
   /Users/ugo/projects/ugovaretto-education/the-little-learner/uv/calculus.rkt:36:6
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (((uv/l2-loss line) line-xs line-ys) '(3 4))
line: contract violation
  expected: a procedure
  given: '#(2.0 1.0 4.0 3.0)
  in: the 1st argument of
      (->*
       ((->
         real?
         (or/c real? (vector/c real? real?))))
       (#:color
        (or/c
         exact-integer?
         (or/c
          (list/c real? real? real?)
          string?
          symbol?
          (is-a?/c color%)))
        #:mapping
        (or/c 'cartesian 'polar)
        #:mode
        (or/c 'standard 'parametric)
        #:samples
        (integer-in 2 #f)
        #:t-max
        real?
        #:t-min
        real?
        #:width
        (>=/c 0))
       renderer2d?)
  contract from: 
      <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt:12:3
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   .../private/arrow-higher-order.rkt:387:44: ...row-higher-order.rkt:387:44
   body of top-level
   /Users/ugo/projects/ugovaretto-education/the-little-learner/uv/calculus.rkt:36:6
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@>   M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.
Welcome to Racket v8.15 [cs].
racket@> (((uv/l2-loss line) line-xs line-ys) '(3 4))
line: contract violation
  expected: a procedure
  given: '#(2.0 1.0 4.0 3.0)
  in: the 1st argument of
      (->*
       ((->
         real?
         (or/c real? (vector/c real? real?))))
       (#:color
        (or/c
         exact-integer?
         (or/c
          (list/c real? real? real?)
          string?
          symbol?
          (is-a?/c color%)))
        #:mapping
        (or/c 'cartesian 'polar)
        #:mode
        (or/c 'standard 'parametric)
        #:samples
        (integer-in 2 #f)
        #:t-max
        real?
        #:t-min
        real?
        #:width
        (>=/c 0))
       renderer2d?)
  contract from: 
      <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt:12:3
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   .../private/arrow-higher-order.rkt:387:44: ...row-higher-order.rkt:387:44
   body of top-level
   /Users/ugo/projects/ugovaretto-education/the-little-learner/uv/calculus.rkt:36:6
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (uv/line line-xs '(0 0'))
stdin::30798: read-syntax: unexpected `)`
  context...:
   /Users/ugo/.config/emacs/elpa/geiser-racket-20210421.125/src/geiser/user.rkt:89:0
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> stdin::31010: read-syntax: unexpected `)`
  context...:
   /Users/ugo/.config/emacs/elpa/geiser-racket-20210421.125/src/geiser/user.rkt:89:0
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> ((uv/line line-xs) '(0 0'))
stdin::31999: read-syntax: unexpected `)`
  context...:
   /Users/ugo/.config/emacs/elpa/geiser-racket-20210421.125/src/geiser/user.rkt:89:0
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> stdin::32211: read-syntax: unexpected `)`
  context...:
   /Users/ugo/.config/emacs/elpa/geiser-racket-20210421.125/src/geiser/user.rkt:89:0
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (uv/line line-xs)
#<procedure:...ner/uv/calculus.rkt:30:4>
racket@> ((uv/line line-xs) '(3 3))
'#(9.0 6.0 15.0 12.0)
racket@> ((uv/l2-loss line-xs line-ys) '(0 0))
uv/l2-loss: arity mismatch;
 the expected number of arguments does not match the given number
  expected: 1
  given: 2
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (((uv/l2-loss uv/line) line-xs line-ys) '(0 0))
33.21
racket@> (map ((uv/l2-loss uv/line) line-xs line-ys) '((0 0) (1 1)))
'(33.21 3.21)
racket@> (loss-weights line-xs line-ys '((0 0 (1 1))))
line: contract violation
  expected: a procedure
  given: '#(2.0 1.0 4.0 3.0)
  in: the 1st argument of
      (->*
       ((->
         real?
         (or/c real? (vector/c real? real?))))
       (#:color
        (or/c
         exact-integer?
         (or/c
          (list/c real? real? real?)
          string?
          symbol?
          (is-a?/c color%)))
        #:mapping
        (or/c 'cartesian 'polar)
        #:mode
        (or/c 'standard 'parametric)
        #:samples
        (integer-in 2 #f)
        #:t-max
        real?
        #:t-min
        real?
        #:width
        (>=/c 0))
       renderer2d?)
  contract from: 
      <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt:12:3
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   .../private/arrow-higher-order.rkt:387:44: ...row-higher-order.rkt:387:44
   body of top-level
   /Users/ugo/projects/ugovaretto-education/the-little-learner/uv/calculus.rkt:36:6
   .../private/map.rkt:40:19: loop
   loss-weights
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (map ((uv/l2-loss line) line-xs line-ys) '((0 0) (1 1)))
line: contract violation
  expected: a procedure
  given: '#(2.0 1.0 4.0 3.0)
  in: the 1st argument of
      (->*
       ((->
         real?
         (or/c real? (vector/c real? real?))))
       (#:color
        (or/c
         exact-integer?
         (or/c
          (list/c real? real? real?)
          string?
          symbol?
          (is-a?/c color%)))
        #:mapping
        (or/c 'cartesian 'polar)
        #:mode
        (or/c 'standard 'parametric)
        #:samples
        (integer-in 2 #f)
        #:t-max
        real?
        #:t-min
        real?
        #:width
        (>=/c 0))
       renderer2d?)
  contract from: 
      <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/deprecated/deprecated.rkt:12:3
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   .../private/arrow-higher-order.rkt:387:44: ...row-higher-order.rkt:387:44
   body of top-level
   /Users/ugo/projects/ugovaretto-education/the-little-learner/uv/calculus.rkt:36:6
   .../private/map.rkt:40:19: loop
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> ,enter racket
racket@racket/main> (loss-weights line-xs line-ys '((0 0 (1 1))))
loss-weights: undefined;
 cannot reference an identifier before its definition
  in module: "/Applications/Racket v8.15/collects/racket/main.rkt"
  context...:
   body of "/Applications/Racket v8.15/collects/racket/main.rkt"
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@racket/main> (loss-weights line-xs line-ys '((0 0 (1 1))))
line-xs: undefined;
 cannot reference an identifier before its definition
  in module: "/Applications/Racket v8.15/collects/racket/main.rkt"
  context...:
   body of "/Applications/Racket v8.15/collects/racket/main.rkt"
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@racket/main> (loss-weights line-xs line-ys '((0 0 (1 1))))
line-xs: undefined;
 cannot reference an identifier before its definition
  in module: "/Applications/Racket v8.15/collects/racket/main.rkt"
  context...:
   body of "/Applications/Racket v8.15/collects/racket/main.rkt"
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@racket/main> (define loss-weights
  (lambda (xs ys ws)
    (list->vector (map ((uv/l2-loss uv/line) xs ys) ws))))

racket@racket/main> (loss-weights line-xs line-ys '((0 0 (1 1))))
line-xs: undefined;
 cannot reference an identifier before its definition
  in module: "/Applications/Racket v8.15/collects/racket/main.rkt"
  context...:
   body of "/Applications/Racket v8.15/collects/racket/main.rkt"
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@racket/main> (loss-weights line-xs line-ys '((0 0 (1 1))))
line-xs: undefined;
 cannot reference an identifier before its definition
  in module: "/Applications/Racket v8.15/collects/racket/main.rkt"
  context...:
   body of "/Applications/Racket v8.15/collects/racket/main.rkt"
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@racket/main> (loss-weights line-xs line-ys '((0 0 (1 1))))
line-xs: undefined;
 cannot reference an identifier before its definition
  in module: "/Applications/Racket v8.15/collects/racket/main.rkt"
  context...:
   body of "/Applications/Racket v8.15/collects/racket/main.rkt"
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@racket/main> line-xs
line-xs: undefined;
 cannot reference an identifier before its definition
  in module: "/Applications/Racket v8.15/collects/racket/main.rkt"
  context...:
   body of "/Applications/Racket v8.15/collects/racket/main.rkt"
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@racket/main> (loss-weights line-xs line-ys '((0 0 (1 1))))  M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.
Welcome to Racket v8.15 [cs].
racket@> (loss-weights line-xs line-ys '((0 0 (1 1))))  M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.

'#(33.21)
racket@> M-x: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> g: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> e: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> i: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> s: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> e: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> r: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> #<procedure:->
racket@> r: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> e: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> p: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> l: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> #<procedure:->
racket@> r: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> e: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> s: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> t: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> a: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> r: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> t: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> #<procedure:->
racket@> r: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> e: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> p: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> l: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> RET: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> It: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> 's
racket@> been: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> nice: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> interacting: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> with: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> you!: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> Press: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> C-c: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> C-z: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> to: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> bring: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> me: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> back.: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> racket@> RET: undefined;  M-x g e i s e r - r e p l - r e s t a r t - r e p l RET
It's been nice interacting with you!
Press C-c C-z to bring me back.
Welcome to Racket v8.15 [cs].
racket@> (loss-weights line-xs line-ys '((0 0 (1 1))))
'#(33.21)
racket@> (loss-weights line-xs line-ys '((0 0) (1 1)))
'#(33.21 3.21)
racket@> (plot-weights line-xs line-ys weights 'blue 'orange)
wc: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   plot-weights
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-weights line-xs line-ys weights 'blue 'orange)
get-renderer-list: contract violation
  expected: (or/c list? nonrenderer? renderer2d?)
  given: #<procedure>
  context...:
   body of top-level
   .../private/map.rkt:40:19: loop
   /Applications/Racket v8.15/share/pkgs/plot-lib/plot/private/no-gui/plot2d-utils.rkt:19:0: get-renderer-list
   /Applications/Racket v8.15/share/pkgs/plot-gui-lib/plot/private/gui/plot2d.rkt:72:0: plot-snip
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot (plot-points-fun line-xs line-ys 'red))
get-renderer-list: contract violation
  expected: (or/c list? nonrenderer? renderer2d?)
  given: #<procedure>
  context...:
   body of top-level
   /Applications/Racket v8.15/share/pkgs/plot-gui-lib/plot/private/gui/plot2d.rkt:72:0: plot-snip
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-loss-weights line-xs line-ys weights 'blue 'orange)
uv/l2-loss-line-m: undefined;
 cannot reference an identifier before its definition
  in module: top-level
  context...:
   body of top-level
   plot-loss-weights
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-loss-weights line-xs line-ys weights 'blue 'orange)
points: contract violation
  expected: a sequence
  given: 126.21
  in: a part of the or/c of
      an element of
      a part of the or/c of
      the 1st argument of
      (->*
       ((or/c
         natural?
         (sequence/c
          (or/c natural? (sequence/c real?)))))
       (#:alpha
        (and/c real? nonnegative?)
        #:color
        (or/c
         string?
         symbol?
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g469
         1
         0
         (recursive-contract g494 #:impersonator)
         (list/c real? real? real?))
        #:fill-color
        (or/c
         string?
         symbol?
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g469
         1
         0
         (recursive-contract g494 #:impersonator)
         (list/c real? real? real?))
        #:label
        (or/c string? #f pict?)
        #:line-width
        (and/c real? nonnegative?)
        #:size
        (and/c real? nonnegative?)
        #:sym
        (or/c
         string?
         char?
         (and/c
          exact-integer?
          negative?
          (not/c fixnum?))
         (and/c
          exact-integer?
          positive?
          (not/c fixnum?))
         (and/c fixnum? negative?)
         (and/c fixnum? positive? (not/c index?))
         (and/c index? positive? (not/c byte?))
         g469
         1
         0
         'dot
         'point
         'pixel
         'plus
         'times
         'asterisk
         '5asterisk
         'odot
         'oplus
         'otimes
         'oasterisk
         'o5asterisk
         'circle
         'square
         'diamond
         'triangle
         'fullcircle
         'fullsquare
         'fulldiamond
         'fulltriangle
         'triangleup
         'triangledown
         'triangleleft
         'triangleright
         'fulltriangleup
         'fulltriangledown
         'fulltriangleleft
         'fulltriangleright
         'rightarrow
         'leftarrow
         'uparrow
         'downarrow
         '4star
         '5star
         '6star
         '7star
         '8star
         'full4star
         'full5star
         'full6star
         'full7star
         'full8star
         'circle1
         'circle2
         'circle3
         'circle4
         'circle5
         'circle6
         'circle7
         'circle8
         'bullet
         'fullcircle1
         'fullcircle2
         'fullcircle3
         'fullcircle4
         'fullcircle5
         'fullcircle6
         'fullcircle7
         'fullcircle8
         'none)
        #:x-jitter
        (and/c real? nonnegative?)
        #:x-max
        (or/c real? #f)
        #:x-min
        (or/c real? #f)
        #:y-jitter
        (and/c real? nonnegative?)
        #:y-max
        (or/c real? #f)
        #:y-min
        (or/c real? #f))
       any)
  contract from: 
      <pkgs>/plot-lib/plot/private/plot2d/point.rkt
  blaming: top-level
   (assuming the contract is correct)
  at: <pkgs>/plot-lib/plot/private/plot2d/point.rkt:47:9
  context...:
   /Applications/Racket v8.15/collects/racket/contract/private/blame.rkt:350:0: raise-blame-error
   /Applications/Racket v8.15/collects/racket/sequence.rkt:251:7
   /Applications/Racket v8.15/collects/racket/sequence.rkt:47:0: body of top-level
   /Applications/Racket v8.15/share/pkgs/plot-lib/plot/private/common/utils.rkt:30:0: sequence->listof-vector
   /Applications/Racket v8.15/share/pkgs/plot-lib/plot/private/plot2d/point.rkt:47:0: points
   plot-loss-weights
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (plot-loss-weights line-xs line-ys weights 'blue 'orange)
[image]
racket@> (loss-weights line-xs line-ys weights)
'#(126.21 33.21 0.20999999999999994 27.21 114.21)
racket@> (loss-weights line-xs line-ys weights)
application: not a procedure;
 expected a procedure that can be applied to arguments
  given: '((-1 0) (0 0) (1 0) (2 0) (3 0))
  context...:
   body of top-level
   loss-weights
   /Applications/Racket v8.15/collects/racket/repl.rkt:11:26
racket@> (loss-weights line-xs line-ys weights)
'(#(-1 126.21) #(0 33.21) #(1 0.20999999999999994) #(2 27.21) #(3 114.21))
racket@> (loss-weights line-xs line-ys weights)
'#(#(-1 126.21) #(0 33.21) #(1 0.20999999999999994) #(2 27.21) #(3 114.21))
racket@> (plot-loss-weights line-xs line-ys weights 'blue 'orange)
[image]
racket@> (plot-loss-weights line-xs line-ys weights 'blue 'orange)
[image]
racket@> (plot-loss-weights line-xs line-ys weights 'blue 'orange)
[image]
racket@> 